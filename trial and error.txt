    /**
     * GREEPS' NUMBERS
     * IN SHIP'S DATABANK[10 - 999]:
     * [i] = greep's number
     * [i+1] = its current X
     * [i+2] = its current Y
     * [i+3] = greep's memory[0] (1 - has food, 0/null - hasn't got food)
     * [i+4] = greep's memory[1] (X pos of food)
     * [i+5] = greep's memory[2] (Y pos of food)
     * [i+6] = free (now)
     * [i+7] = free (now)
     * [i+8] = free (now)
     * [i+9] = free (now)
     * 
     * Returns current greep's number (makes new one if greep hasn't got one)
     */


    private void improvedMove(){
        int data[] = getShipData();
        int number = getNumber();
        int stuckX = data[number+1];
        int stuckY = data[number+2];
        int stuckI = data[number+3];
        if (stuckI == 30){
            stuckI = 0;
            if (Math.abs(stuckX - getX()) < 15 && Math.abs(stuckY - getY()) < 15){
                turn(180);
                randomWalk();
            }
        } else {
            stuckI ++;
        }
        data[number+3] = stuckI;
        data[number+1] = getX();
        data[number+2] = getY();
        move();
    }